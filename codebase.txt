import os
import json
import requests

discussion_id = os.getenv("DISCUSSION_ID")
comment_body = os.getenv("COMMENT_BODY", "").strip()
comment_id = os.getenv("COMMENT_ID")
author = os.getenv("COMMENT_AUTHOR")
token = os.getenv("GITHUB_TOKEN")
repo = os.getenv("GITHUB_REPOSITORY")

data_file = "game_data.json"

if not (discussion_id and comment_body and token):
    print("Missing required environment variables.")
    exit(1)

# Only allow numeric guesses
if not comment_body.isdigit():
    print("Comment is not a number, skipping.")
    exit(0)

guess = int(comment_body)

# Load game state
with open(data_file, "r") as f:
    data = json.load(f)

game = data.get(discussion_id)
if not game or game["solved"]:
    print("No game found or already solved.")
    exit(0)

secret = game["secret"]
game["attempts"] += 1

if guess == secret:
    reply = f"üéâ Congrats @{author}! You guessed it right in {game['attempts']} attempts! The number was **{secret}**."
    game["solved"] = True
else:
    reply = f"‚ùå Nope, {guess} is not the number. Try again!"

# Save updated state
with open(data_file, "w") as f:
    json.dump(data, f, indent=2)

# Post comment reply using GraphQL
api_url = "https://api.github.com/graphql"
headers = {
    "Authorization": f"Bearer {token}",
    "Accept": "application/vnd.github+json"
}
query = """
mutation($discussionId: ID!, $replyToId: ID!, $body: String!) {
  addDiscussionComment(input: {discussionId: $discussionId, replyToId: $replyToId, body: $body}) {
    comment {
      id
    }
  }
}
"""
variables = {
    "discussionId": discussion_id,
    "replyToId": comment_id,
    "body": reply
}
payload = {
    "query": query,
    "variables": variables
}

response = requests.post(api_url, json=payload, headers=headers)
print("Comment response:", response.status_code, response.text)
print("Reply body:", reply)
import json
import os
import random

DISCUSSION_ID = os.getenv("DISCUSSION_ID")

if not DISCUSSION_ID:
    raise ValueError("No discussion ID provided")

# file path
data_file = "game_data.json"

# load existing data
if os.path.exists(data_file):
    with open(data_file, "r") as f:
        data = json.load(f)
else:
    data = {}

# if the number has already been generated, do nothing
if DISCUSSION_ID in data:
    print(f"Secret number already exists for discussion {DISCUSSION_ID}")
else:
    secret = random.randint(1, 100)
    data[DISCUSSION_ID] = {
        "secret": secret,
        "attempts": 0,
        "solved": False
    }

    with open(data_file, "w") as f:
        json.dump(data, f, indent=2)

    print(f"Generated secret number {secret} for discussion {DISCUSSION_ID}")
name: Respond to Guesses

on:
  discussion_comment:
    types: [created]

jobs:
  check-guess:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Run script to check guess
        run: python scripts/check_guess.py
        env:
          DISCUSSION_ID: ${{ github.event.discussion.id }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          COMMENT_ID: ${{ github.event.comment.id }}
          COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Generate Secret Number

on:
  discussion:
    types: [created]

jobs:
  generate-secret:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run Python script to save number
        run: python scripts/save_secret_number.py
        env:
          DISCUSSION_ID: ${{ github.event.discussion.id }}

      - name: Commit updated game_data.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add game_data.json
          git commit -m "Generated secret number for discussion ${{ github.event.discussion.id }}" || echo "No changes to commit"
          git push
